{"version":3,"file":"main.js","mappings":"+HAAA,SAGA,IAAaA,EAAb,MAEEC,UACE,MAAO,CAACC,KAAM,CACZC,OAAQ,CACN,WACA,cAJN,kBADC,IAAAC,KAAI,K,2JADMJ,GAAa,kBADzB,IAAAK,eACYL,GAAA,EAAAA,cAAAA,G,iGCHb,SACA,SAGA,SAGA,SAGA,SACA,SAGA,SACA,QAwBA,IAAaM,EAAb,QAAaA,GAAS,kBAtBrB,IAAAC,QAAO,CACNC,QAAS,CACP,EAAAC,kBAAkBC,QAAQ,CACxBC,UAAU,IAAAC,MAAKC,UAAW,KAAM,QAChCC,QAAS,CAAC,WAEZ,EAAAC,cAAcL,QAAQ,CACpBM,KAAM,WACNC,KAAMC,QAAQC,IAAIC,QAClBC,KAAMC,SAASJ,QAAQC,IAAII,SAC3BC,SAAUN,QAAQC,IAAIM,YACtBC,SAAUR,QAAQC,IAAIQ,YACtBC,SAAUV,QAAQC,IAAIU,YACtBC,SAAU,EAAAA,SACVC,aAAa,IAEb,EAAAC,cACA,EAAAC,YAEJC,YAAa,CAAC,EAAAlC,eACdmC,UAAW,MAEA7B,GAAA,EAAAA,UAAAA,G,kGCvCb,SACA,SACA,SACA,QACA,OAOA,IAAa2B,EAAb,QAAaA,GAAU,kBALtB,IAAA1B,QAAO,CACJC,QAAS,CAAC,EAAAO,cAAcqB,WAAW,CAAC,EAAAC,QACpCH,YAAa,CAAC,EAAAI,gBACdH,UAAW,CAAC,EAAAI,gBAEHN,GAAA,EAAAA,WAAAA,G,iHCXb,SACA,SACA,OAGA,IAAaK,EAAb,MACIE,YAAoBC,GAAA,KAAAA,QAAAA,EAGpBC,UACI,OAAOC,KAAKF,QAAQC,UAIxBE,OAAeC,GACX,OAAOF,KAAKF,QAAQG,OAAOC,GAI/BC,OAAoBC,GAChB,OAAOJ,KAAKF,QAAQK,OAAOC,MAX/B,kBADC,IAAA3C,KAAI,M,sHACa,mB,EAAA,oBAAP4C,SAAAA,SAAO,W,6BAKlB,kBADC,IAAAC,MAAK,MACE,oBAAAC,U,8EAAoB,mB,OAAA,IAAP,EAAAC,SAAA,EAAAA,SAAO,Y,oCAAU,mB,EAAA,oBAAPH,SAAAA,SAAO,W,4BAKtC,kBADC,IAAAI,QAAO,SACA,oBAAAC,OAAM,Q,gKAdLf,GAAc,kBAD1B,IAAAjC,YAAW,S,qCAEgC,mB,OAAA,IAAX,EAAAkC,aAAA,EAAAA,aAAW,YAD/BD,GAAA,EAAAA,eAAAA,G,+FCLb,SAEA,MAAaa,IAET,kBADC,IAAAG,a,iEAID,kBADC,IAAAA,a,uEAJL,a,uGCFA,SAGA,SACA,SACA,SAGA,IAAaf,EAAb,MAEIC,YAA4Ce,GAAA,KAAAA,SAAAA,EAE5Cb,UACI,OAAOC,KAAKY,SAASC,OAGzBZ,OAAOa,GACH,OAAOd,KAAKY,SAASG,KAAKD,GAG9BX,OAAOC,GACH,OAAOJ,KAAKY,SAAST,OAAO,CAACC,SAbxBR,GAAW,kBADvB,IAAAoB,eAGgB,oBAAAC,kBAAiB,EAAAvB,Q,qCAAkC,mB,OAAA,IAAV,EAAAwB,YAAA,EAAAA,YAAU,YAFvDtB,GAAA,EAAAA,YAAAA,G,uHCRb,SACA,QACA,SAIA,IAAauB,EAAb,MACItB,YAAoBC,GAAA,KAAAA,QAAAA,EAGpBsB,QAAqBhB,GACjB,OAAOJ,KAAKF,QAAQsB,QAAQhB,GAIhCL,UACI,OAAOC,KAAKF,QAAQC,UAIxBE,OAAea,GACX,OAAOd,KAAKF,QAAQG,OAAOa,MAX/B,kBADC,IAAArD,KAAI,SACI,oBAAAiD,OAAM,Q,4HAA0B,mB,EAAA,oBAAPL,SAAAA,SAAO,W,6BAKzC,kBADC,IAAA5C,KAAI,M,sHACa,mB,EAAA,oBAAP4C,SAAAA,SAAO,W,6BAKlB,kBADC,IAAAC,MAAK,MACE,oBAAAC,U,8EAA0B,mB,OAAA,IAAV,EAAAc,YAAA,EAAAA,YAAU,Y,oCAAU,mB,EAAA,oBAAPhB,SAAAA,SAAO,W,2BAdnCc,GAAiB,kBAD7B,IAAAzD,YAAW,a,qCAEmC,mB,OAAA,IAAd,EAAA4D,gBAAA,EAAAA,gBAAc,YADlCH,GAAA,EAAAA,kBAAAA,G,iGCNb,SAEA,MAAaE,IAET,kBADC,IAAAV,a,iEAID,kBADC,IAAAY,a,mEAID,kBADC,IAAAA,a,0EAID,kBADC,IAAAZ,a,mEAVL,gB,qGCFA,SACA,SACA,SACA,SACA,SAOA,IAAatB,EAAb,QAAaA,GAAa,kBALzB,IAAAzB,QAAO,CACJC,QAAS,CAAC,EAAAO,cAAcqB,WAAW,CAAC,EAAA+B,WACpCjC,YAAa,CAAC,EAAA4B,mBACd3B,UAAW,CAAC,EAAA8B,mBAEHjC,GAAA,EAAAA,cAAAA,G,4GCXb,SACA,SACA,SAGA,SAGA,IAAaiC,EAAb,MAEIzB,YAA+C4B,GAAA,KAAAA,YAAAA,EAE/C1B,UACI,OAAOC,KAAKyB,YAAYZ,OAG5BZ,OAAOa,GACH,OAAOd,KAAKyB,YAAYV,KAAKD,GAGjCM,QAAQhB,GACJ,OAAOJ,KAAKyB,YAAYL,QAAQ,CAACM,MAAO,CAACtB,UAbpCkB,GAAc,kBAD1B,IAAAN,eAGgB,oBAAAC,kBAAiB,EAAAO,W,qCAAwC,mB,OAAA,IAAV,EAAAN,YAAA,EAAAA,YAAU,YAF7DI,GAAA,EAAAA,eAAAA,G,kGCRb,SACA,SAGA,IAAa5B,EAAb,SAEI,kBADC,IAAAiC,2B,iEAID,kBADC,IAAAC,QAAO,CAAEC,KAAM,e,wEAKhB,kBAFC,IAAAC,YAAU,IAAM,EAAAN,UAASV,GAAWA,EAAQiB,SAC5C,IAAAC,YAAW,CAAEH,KAAM,e,8BACJ,mB,OAAA,IAAP,EAAAL,SAAA,EAAAA,SAAO,W,8BATP9B,GAAI,kBADhB,IAAAuC,WACYvC,GAAA,EAAAA,KAAAA,G,iFCHb,eACA,SAEa,EAAAP,SAAW,CACtB,EAAAqC,QACA,EAAA9B,O,qGCNF,SACA,SAGA,IAAa8B,EAAb,SAEI,kBADC,IAAAG,2B,iEAID,kBADC,IAAAC,QAAO,CAACM,UAAU,K,mEAInB,kBADC,IAAAN,W,0EAID,kBADC,IAAAA,QAAO,CAACM,UAAU,K,oEAInB,kBADC,IAAAC,YAAU,IAAM,EAAAzC,OAAMQ,GAAQA,EAAKY,W,8BACzB,mB,OAAA,IAAJ,EAAApB,MAAA,EAAAA,MAAI,W,4BAdF8B,GAAO,kBADnB,IAAAS,WACYT,GAAA,EAAAA,QAAAA,G,QCJbY,EAAOC,QAAUC,QAAQ,mB,QCAzBF,EAAOC,QAAUC,QAAQ,iB,QCAzBF,EAAOC,QAAUC,QAAQ,yB,QCAzBF,EAAOC,QAAUC,QAAQ,oB,QCAzBF,EAAOC,QAAUC,QAAQ,oB,QCAzBF,EAAOC,QAAUC,QAAQ,U,QCAzBF,EAAOC,QAAUC,QAAQ,Y,OCAzBF,EAAOC,QAAUC,QAAQ,UCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,Q,uFChBf,SACA,SAEA,UAEA,Y,+CACE,MAAMQ,QAAY,EAAAC,YAAY7C,OAAO,EAAAtC,WAErCkF,EAAIE,gBADiB,OAErB,MAAMrE,EAAOH,QAAQC,IAAIwE,MAAQ,WAC3BH,EAAII,OAAOvE,GACjB,EAAAwE,OAAOC,IACL,kDAAkDzE,YAItD0E,I","sources":["webpack://project/./apps/api/src/app/app.controller.ts","webpack://project/./apps/api/src/app/app.module.ts","webpack://project/./apps/api/src/app/cart/cart.module.ts","webpack://project/./apps/api/src/app/cart/controller/cart.controller.ts","webpack://project/./apps/api/src/app/cart/dto/cart.dto.ts","webpack://project/./apps/api/src/app/cart/service/cart.service.ts","webpack://project/./apps/api/src/app/product/controller/product.controller.ts","webpack://project/./apps/api/src/app/product/dto/product.dto.ts","webpack://project/./apps/api/src/app/product/product.module.ts","webpack://project/./apps/api/src/app/product/service/product.service.ts","webpack://project/./apps/api/src/entities/cart/cart.entity.ts","webpack://project/./apps/api/src/entities/index.ts","webpack://project/./apps/api/src/entities/product/product.entity.ts","webpack://project/external commonjs \"@nestjs/common\"","webpack://project/external commonjs \"@nestjs/core\"","webpack://project/external commonjs \"@nestjs/serve-static\"","webpack://project/external commonjs \"@nestjs/typeorm\"","webpack://project/external commonjs \"class-validator\"","webpack://project/external commonjs \"tslib\"","webpack://project/external commonjs \"typeorm\"","webpack://project/external node-commonjs \"path\"","webpack://project/webpack/bootstrap","webpack://project/./apps/api/src/main.ts"],"sourcesContent":["import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class AppController {\n  @Get('')\n  getData(): unknown {\n    return {info: {\n      routes: [\n        \"/product\",\n        \"/cart\"\n      ]\n    }}\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n//entities\nimport { entities } from '../entities';\n\n//controller\nimport { AppController } from './app.controller';\n\n//modules\nimport { ProductModule } from './product/product.module';\nimport { CartModule } from './cart/cart.module';\n\n//for deploying\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\n\n@Module({\n  imports: [\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'shop'),\n      exclude: ['/api*']\n    }),\n    TypeOrmModule.forRoot({\n      type: \"postgres\",\n      host: process.env.DB_HOST,\n      port: parseInt(process.env.DB_PORT),\n      username: process.env.DB_USERNAME,\n      password: process.env.DB_PASSWORD,\n      database: process.env.DB_DATABASE,\n      entities: entities,\n      synchronize: true,\n    }),\n      ProductModule,\n      CartModule\n  ],\n  controllers: [AppController],\n  providers: [],\n})\nexport class AppModule {}\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm'\r\nimport { Cart } from '../../entities/cart/cart.entity';\r\nimport { CartController } from './controller/cart.controller';\r\nimport { CartService } from './service/cart.service';\r\n\r\n@Module({\r\n    imports: [TypeOrmModule.forFeature([Cart])],\r\n    controllers: [CartController],\r\n    providers: [CartService]\r\n})\r\nexport class CartModule {}","import { Body, Controller, Delete, Get, Param, Post } from '@nestjs/common';\nimport { CartDto } from '../dto/cart.dto';\nimport { CartService } from '../service/cart.service';\n\n@Controller('cart')\nexport class CartController {\n    constructor(private service: CartService){}\n\n    @Get('/')\n    findAll(): Promise<CartDto[]> {\n        return this.service.findAll()\n    }\n\n    @Post('/')\n    create(@Body() cart: CartDto): Promise<CartDto> {\n        return this.service.create(cart)\n    }\n\n    @Delete('/:id')\n    delete(@Param('id') id: number){\n        return this.service.delete(id)\n    }\n\n\n}\n","import { IsNumber } from \"class-validator\";\n\nexport class CartDto {\n    @IsNumber()\n    id: number;\n\n    @IsNumber()\n    productId: number;\n}\n","import { Injectable } from '@nestjs/common';\nimport { CartDto } from '../dto/cart.dto';\n\nimport { InjectRepository } from '@nestjs/typeorm'\nimport { Repository } from \"typeorm\"\nimport { Cart } from '../../../entities/cart/cart.entity';\n\n@Injectable()\nexport class CartService {\n\n    constructor(@InjectRepository(Cart) private cartRepo: Repository<Cart>){}\n\n    findAll(): Promise<CartDto[]> {\n        return this.cartRepo.find()\n    }\n\n    create(product: CartDto): Promise<CartDto> {\n        return this.cartRepo.save(product)\n    }\n\n    delete(id: number){\n        return this.cartRepo.delete({id})\n    }\n}\n","import { Body, Controller, Get, Post, Param } from '@nestjs/common';\nimport { ProductDto } from '../dto/product.dto';\nimport { ProductService } from '../service/product.service';\n\n\n@Controller('products')\nexport class ProductController {\n    constructor(private service: ProductService){}\n    \n    @Get('/:id')\n    findOne(@Param('id') id: number): Promise<ProductDto> {\n        return this.service.findOne(id)\n    }\n\n    @Get('/')\n    findAll(): Promise<ProductDto[]> {\n        return this.service.findAll()\n    }\n\n    @Post('/')\n    create(@Body() product: ProductDto): Promise<ProductDto> {\n        return this.service.create(product)\n    }\n\n}\n","import { IsNumber, IsString } from \"class-validator\";\n\nexport class ProductDto {\n    @IsNumber()\n    id: number;\n\n    @IsString()\n    name: string;\n\n    @IsString()\n    description: string;\n\n    @IsNumber()\n    price: number;\n}\n","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm'\nimport { Product } from '../../entities/product/product.entity'\nimport { ProductController } from './controller/product.controller';\nimport { ProductService } from './service/product.service';\n\n@Module({\n    imports: [TypeOrmModule.forFeature([Product])],\n    controllers: [ProductController],\n    providers: [ProductService]\n})\nexport class ProductModule {}\n","import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm'\nimport { Repository } from \"typeorm\"\n\nimport { ProductDto } from '../dto/product.dto';\nimport { Product } from '../../../entities/product/product.entity';\n\n@Injectable()\nexport class ProductService {\n\n    constructor(@InjectRepository(Product) private productRepo: Repository<Product>){}\n\n    findAll(): Promise<ProductDto[]> {\n        return this.productRepo.find()\n    }\n\n    create(product: ProductDto): Promise<ProductDto> {\n        return this.productRepo.save(product)\n    }\n\n    findOne(id: number): Promise<ProductDto> {\n        return this.productRepo.findOne({where: {id}})\n    }\n}\n","import { Entity, PrimaryGeneratedColumn, ManyToOne, JoinColumn, Column } from \"typeorm\";\nimport { Product } from \"../product/product.entity\"\n\n@Entity()\nexport class Cart {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column({ name: 'productId' })\n    productId: number;\n\n    @ManyToOne(() => Product, product => product.carts)\n    @JoinColumn({ name: 'productId' })\n    product: Product;\n}\n","//entities\r\nimport { Product } from \"./product/product.entity\";\r\nimport { Cart } from \"./cart/cart.entity\";\r\n\r\nexport const entities = [\r\n  Product,\r\n  Cart\r\n]","import { Column, Entity, PrimaryGeneratedColumn, OneToMany } from \"typeorm\";\nimport { Cart } from \"../cart/cart.entity\";\n\n@Entity()\nexport class Product {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column({nullable: false})\n    name: string;\n\n    @Column()\n    description: string;\n\n    @Column({nullable: false})\n    price: number;\n\n    @OneToMany(() => Cart, cart => cart.product)\n    carts: Cart;\n}","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/serve-static\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"class-validator\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3333;\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":["AppController","getData","info","routes","Get","Controller","AppModule","Module","imports","ServeStaticModule","forRoot","rootPath","join","__dirname","exclude","TypeOrmModule","type","host","process","env","DB_HOST","port","parseInt","DB_PORT","username","DB_USERNAME","password","DB_PASSWORD","database","DB_DATABASE","entities","synchronize","ProductModule","CartModule","controllers","providers","forFeature","Cart","CartController","CartService","constructor","service","findAll","this","create","cart","delete","id","Promise","Post","Body","CartDto","Delete","Param","IsNumber","cartRepo","find","product","save","Injectable","InjectRepository","Repository","ProductController","findOne","ProductDto","ProductService","IsString","Product","productRepo","where","PrimaryGeneratedColumn","Column","name","ManyToOne","carts","JoinColumn","Entity","nullable","OneToMany","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","app","NestFactory","setGlobalPrefix","PORT","listen","Logger","log","bootstrap"],"sourceRoot":""}